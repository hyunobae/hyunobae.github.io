<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://hyunobae.github.io/</id><title>Hyuno's Blog</title><subtitle>주인장의 아카이빙 블로그 </subtitle> <updated>2022-05-17T19:47:27+08:00</updated> <author> <name>hyunobae</name> <uri>https://hyunobae.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://hyunobae.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://hyunobae.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 hyunobae </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>소수만들기 (Python)</title><link href="https://hyunobae.github.io/posts/make_primenum/" rel="alternate" type="text/html" title="소수만들기 (Python)" /><published>2022-05-17T00:00:00+08:00</published> <updated>2022-05-17T00:00:00+08:00</updated> <id>https://hyunobae.github.io/posts/make_primenum/</id> <content src="https://hyunobae.github.io/posts/make_primenum/" /> <author> <name>hyunobae</name> </author> <category term="algorithm" /> <summary> 문제 설명 주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를 완성해주세요. 제한 사항 nums에 들어있는 숫자의 개수는 3개 이상 50개 이하입니다. nums의 각 원소는 1 이상 1,000 이하의 자연수이며, 중복된 숫자가 들어있지 않습니다. 풀이 itertools의 combinations를 알고 있는가가 중요한 문제인 것 같다. combinations로 가능한 조합을 만들고 더하고 소수인지 확인하는 loop면 간단하게 해결 가능하다. 코드 from itertools ... </summary> </entry> <entry><title>프린터 (Python)</title><link href="https://hyunobae.github.io/posts/printer/" rel="alternate" type="text/html" title="프린터 (Python)" /><published>2022-05-10T00:00:00+08:00</published> <updated>2022-05-10T00:00:00+08:00</updated> <id>https://hyunobae.github.io/posts/printer/</id> <content src="https://hyunobae.github.io/posts/printer/" /> <author> <name>hyunobae</name> </author> <category term="algorithm" /> <summary> 문제 설명 일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다. 인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다. 나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다. 그렇지 않으면 J를 인쇄합니다. 예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다. 내가 인쇄를 요청한 문... </summary> </entry> <entry><title>더 맵게 (Python)</title><link href="https://hyunobae.github.io/posts/heapq/" rel="alternate" type="text/html" title="더 맵게 (Python)" /><published>2022-05-09T00:00:00+08:00</published> <updated>2022-05-09T21:34:10+08:00</updated> <id>https://hyunobae.github.io/posts/heapq/</id> <content src="https://hyunobae.github.io/posts/heapq/" /> <author> <name>hyunobae</name> </author> <category term="algorithm" /> <summary> 문제 설명 매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다. 섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 스코빌 지수 * 2) Leo는 모든 음식의 스코빌 지수가 K 이상이 될 때까지 반복하여 섞습니다. Leo가 가진 음식의 스코빌 지수를 담은 배열 scoville과 원하는 스코빌 지수 K가 주어질 때, 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 섞어야 하는 최소 횟수를 return 하도록 solution 함수를 작성해주세요. 제한 사... </summary> </entry> <entry><title>기능개발 (Python)</title><link href="https://hyunobae.github.io/posts/deque/" rel="alternate" type="text/html" title="기능개발 (Python)" /><published>2022-05-09T00:00:00+08:00</published> <updated>2022-05-10T19:52:48+08:00</updated> <id>https://hyunobae.github.io/posts/deque/</id> <content src="https://hyunobae.github.io/posts/deque/" /> <author> <name>hyunobae</name> </author> <category term="algorithm" /> <summary> 문제 설명 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다. 또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다. 먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요. 제한 사항 작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다. 작업 진도는 100 미만의 자연수입니다. 작업 속도... </summary> </entry> <entry><title>Pooling에 대한 고찰</title><link href="https://hyunobae.github.io/posts/pooling/" rel="alternate" type="text/html" title="Pooling에 대한 고찰" /><published>2022-03-07T00:00:00+08:00</published> <updated>2022-03-07T17:29:56+08:00</updated> <id>https://hyunobae.github.io/posts/pooling/</id> <content src="https://hyunobae.github.io/posts/pooling/" /> <author> <name>hyunobae</name> </author> <category term="Pytorch" /> <summary> Pooling 이번에는 딥 러닝 모델에서 자주 사용되는 pooling에 대해서 정리하도록 하겠다. Pooling은 컴퓨터비전, 특히 CNN에서 많이 사용되는데 고차원의 feature를 축소하는 용도로 많이 사용이 되고 있다. 크기는 줄이면서 중요한 정보는 강조하는 중요한 역할을 맡고 있다. Pooling에는 여러가지 종류가 있는데 아래에서 하나씩 보도록 하겠다. Max pooling &amp;amp; Average pooling &amp;lt;img src=https://user-images.githubusercontent.com/54826050/156974070-099b23c2-bbd3-4248-a624-828f875963fe.png&amp;gt; Max pooling은 말 그대로 최대로 pooling을 수행하겠다고... </summary> </entry> </feed>
